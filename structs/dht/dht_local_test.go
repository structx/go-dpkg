package dht

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_HashKey(t *testing.T) {

	assert := assert.New(t)

	t.Run("default", func(t *testing.T) {
		key := []byte("bob")
		h := hashKey(key)
		assert.NotNil(h)
	})
}

func Test_XOR(t *testing.T) {

	assert := assert.New(t)

	t.Run("default", func(t *testing.T) {

		a := [28]byte{}
		b := [28]byte{}

		v := xor(a, b)

		assert.Equal(v, []byte{
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
		})
	})
}

func Test_CompareDistances(t *testing.T) {

	assert := assert.New(t)

	t.Run("default", func(t *testing.T) {

		a := [28]byte{
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
		}

		b := [28]byte{
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
		}

		distance := compareDistances(a, b)
		assert.Equal(0, distance)
	})
}
